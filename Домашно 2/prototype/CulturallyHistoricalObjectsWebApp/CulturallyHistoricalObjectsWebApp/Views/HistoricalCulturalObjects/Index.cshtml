@model CulturallyHistoricalObjectsWebApp.Models.FilterDTO

@{
    ViewBag.Title = "Index";
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<head>
    <title>Welcome</title>
    <link rel="stylesheet" href="../../Content/style/style.css">

    <script>
        $(document).ready(function () {
            $('#findAllBtn').click(function () {
                $('#actionType').val('FindAll');
            });

            $('#findClosestBtn').click(function () {
                // Set the action type
                $('#actionType').val('FindClosest');

                // Retrieve geolocation if available
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(function (position) {
                        var userLatitude = position.coords.latitude;
                        var userLongitude = position.coords.longitude;

                        // Set the values of hidden inputs
                        $('<input>').attr({
                            type: 'hidden',
                            id: 'userLatitude',
                            name: 'userLatitude',
                            value: userLatitude
                        }).appendTo('form');

                        $('<input>').attr({
                            type: 'hidden',
                            id: 'userLongitude',
                            name: 'userLongitude',
                            value: userLongitude
                        }).appendTo('form');

                        // Submit the form after setting the geolocation values
                        $('form').submit();
                    });
                } else {
                    alert("Your browser doesn't support Geolocation which is needed for the Find Closest option");
                }
                return false; // Prevent the default form submission
            });
        });

        function showPosition(position) {
            var userLatitude = position.coords.latitude;
            var userLongitude = position.coords.longitude;

            // Append hidden input fields with user's latitude and longitude
            $('<input>').attr({
                type: 'hidden',
                id: 'userLatitude',
                name: 'userLatitude',
                value: userLatitude
            }).appendTo('form');

            $('<input>').attr({
                type: 'hidden',
                id: 'userLongitude',
                name: 'userLongitude',
                value: userLongitude
            }).appendTo('form');
        }
    </script>
</head>
<body>
    <header class="header-style">
        <h1 style="font-size: 56px">Home</h1>
        <p style="font-size: 18px">
            Lorem ipsum dolor sit amet consectetur adipisicing elit. Et delectus
            odit eum necessitatibus esse molestiae aliquid illum, itaque
            reprehenderit blanditiis ipsam tenetur impedit optio minima officiis
            nulla sequi inventore culpa.
        </p>
    </header>
    <div>
        <div>
            @using (Html.BeginForm("Filter", "HistoricalCulturalObjects", FormMethod.Post, new { @class = "form-style"}))
            {

                @Html.LabelFor(model => model.name, "Name:", new { @class = "label-style"})
                @Html.TextBoxFor(model => model.name, new { @class="input-text-style"})
                @Html.Label("Select category", new { @class = "label-style"})
                @Html.DropDownListFor(model => model.type_id, new SelectList(Model.types, "id", "type"), "Select category", new { @class = "select-style"})

                @Html.Hidden("actionType", "", new { id = "actionType" })
                <br />
                <button type="submit" id="findAllBtn">Find All</button>
                <button type="submit" id="findClosestBtn">Find Closest</button>
            }
        </div>
    </div>
</body>