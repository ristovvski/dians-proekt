@model CulturallyHistoricalObjectsWebApp.Models.HistoricalCulturalObjects

@{
    ViewBag.Title = "Details";
}
<head>

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
          integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
          crossorigin="" />
    <!-- Make sure you put this AFTER Leaflet's CSS -->
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
            integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
            crossorigin=""></script>

    <style>
        body {
        font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background: url("../../Content/style/bg.jpg") center/cover fixed no-repeat;
        color: #ecf0f1;
        display: flex;
        align-items: center;
        flex-direction: column;
        height: 100vh;
        }

        body::before {
        content: "";
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            0deg,
            rgba(0, 0, 36, 0.6) 0%,
            rgba(0, 0, 0, 0.8) 100%
        );
        z-index: -1;
        }

        #map {
        width: 80%;
        height: 400px;
        border-radius: 8px;
        margin-bottom: 20px;
        }

        p {
        font-size: 18px;
        text-align: center;
        }

        .link_style{
            color: white;
            text-decoration: none;
        }

        @@media only screen and (max-width: 600px) {
            #map {
                width: 90%;
                height: 500px;
            }
        }
        
    </style>
    <script>
        // Wait for the DOM content to load
        document.addEventListener('DOMContentLoaded', function() {
            var lon = @Html.Raw(Json.Encode(Model.lon)); // Get lon value from model
            var lat = @Html.Raw(Json.Encode(Model.lat)); // Get lat value from model
            addOnMap(lon, lat); // Call the function with lon and lat
        });

        function addOnMap(lon, lat) {
            console.log(lon)

            console.log(lat)
            var mapOptions = {
                center: [lat, lon],
                zoom: 15
            }

            // Creating a map object
            var map = new L.map('map', mapOptions); // Change ‘map’ to 'map'

            // Creating a Layer object
            var layer = new L.TileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png');

            // Adding layer to the map
            map.addLayer(layer);

            var marker = L.marker([lat, lon]).addTo(map);

        }
    </script>
</head>
<body>
    <div>
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.name)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.type)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.type)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.lon)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.lon)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.lat)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.lat)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.region)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.region.name)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.address)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.address)
            </dd>

        </dl>
    </div>
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.id }, new {@class="link_style"}) |
        @Html.ActionLink("Back to List", "Index", new {@class="link_style"})
    </p>

    <div id="map" ></div>


</body>